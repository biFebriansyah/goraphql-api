package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.63

import (
	"context"

	"github.com/biFebriansyah/goraphql/graph/model"
)

// CreateUser is the resolver for the createUser field.
func (r *mutationResolver) CreateUser(ctx context.Context, input model.NewUser) (*model.Users, error) {
	data, err := r.UserService.CreateOne(input)
	if err != nil {
		return nil, err
	}

	return data, nil
}

// User is the resolver for the user field.
func (r *queryResolver) User(ctx context.Context, id string) (*model.Users, error) {
	data, err := r.UserService.GetById(id)
	if err != nil {
		return nil, err
	}

	return data, nil
}

// Users is the resolver for the users field.
func (r *queryResolver) Users(ctx context.Context) ([]*model.Users, error) {
	data, err := r.UserService.GetAll()
	if err != nil {
		return nil, err
	}

	return data, nil
}
